# Задание 1. Модуль для подсчета количества повторений слов
# Создайте модуль с функцией, которая получает список слов и возвращает
# словарь, в котором ключи — это слова, а значения — количество их повторений
# в списке.

# from count_words_module import count_words
#
# some_text = ('# Задание 1. Модуль для подсчета количества повторений слов '
#              'Создайте модуль с функцией, которая получает список слов и возвращает '
#              'словарь, в котором ключи — это слова, а значения — количество их повторений '
#              'в списке.')
# print(count_words(some_text))

# Задача 2. Модуль для удаления дублирующихся подряд символов
# Напишите модуль с функцией, которая принимает строку и возвращает строку с
# удаленными дублирующимися подряд идущими символами. Например, строка
# "aabbccaa" должна быть преобразована в "abca".

# from delete_dubles_module import delete_dubles
#
# some_text = ('gagddfgerggg')
# print(delete_dubles(some_text))

# Задача 3. Модуль для нахождения уникальных для обоих списков
# элементов
# Создайте модуль с функцией, которая принимает два списка и возвращает
# список, содержащий только элементы, которые уникальны для обоих списков.

# from get_unique_module import get_unique
#
# print(get_unique([1, 2, 3], [3, 4, 5]))

# Задача 4. Модуль для проверки даты
# Создайте модуль и напишите в нём функцию, которая получает на вход дату в
# формате DD.MM.YYYY Функция возвращает истину, если дата может существовать
# или ложь, если такая дата невозможна. Для простоты договоримся, что год
# может быть в диапазоне [1, 9999]. Весь период (1 января 1 года - 31 декабря 9999
# года) действует Григорианский календарь. Проверку года на високосность
# вынести в отдельную защищённую функцию.
# from check_date_module import check_date
#
# print(check_date('20.01.2024'))

